@function getEdgeVertices($orientation){
  $vertices: (topLeft: '0,0', topRight: '100,0', bottomLeft: '0,100', bottomRight: '100,100');
  
  $excludedVertical: if(str-index($orientation, "top"), "bottom", "top");
  $excludedVertex: if(str-index($orientation, "left"), "#{$excludedVertical}Right", "#{$excludedVertical}Left" );
  
  @return map-values( map-remove( $vertices , $excludedVertex ) );
}

@function getDiagonalEdgeDataURI($orientation, $color){
  $points: getEdgeVertices($orientation);
  $fill: colorToRGB($color);
  
  @return "data:image/svg+xml;charset=utf8," + 
          "%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100' preserveAspectRatio='none'%3E" +
              "%3Cpolygon points='#{$points}' style='fill:#{$fill}'/%3E" + 
          "%3C/svg%3E";
}

%bg-datauri-base {
  background-repeat: no-repeat;
  background-size: 100% 100%;
}

%pseudo-diagonal-edge {
    content: '';
    display: block;
    position: absolute;
}




@mixin diagonal-edge($orientation, $color){
    @extend %bg-datauri-base;
    @extend %pseudo-diagonal-edge;
    background-image: url( getDiagonalEdgeDataURI($orientation, $color) );
}

